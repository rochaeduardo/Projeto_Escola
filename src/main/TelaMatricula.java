/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eduardo Rocha
 */
public class TelaMatricula extends javax.swing.JFrame {

    /**
     * Creates new form TelaMatricula
     */
    
    Connection con=null;
    
    public TelaMatricula() {
        initComponents();
        setLocationRelativeTo(null);
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/escola", "root", ""); 
            
            // Exibir todos os dados da tabela aluno, curso e matricula
            
            // TABELA ALUNO
            DefaultTableModel aModel = (DefaultTableModel)tbl_aluno.getModel();
            aModel.setRowCount(0);
            Statement stmt=con.createStatement();            
            ResultSet rs=stmt.executeQuery("select codigo, nome from aluno");
            java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();
            
            while(rs.next())
            {
                Object[] objects = new Object[colNo];
                for(int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i+1);
                }
                aModel.addRow(objects);
            }
            
            tbl_aluno.setModel(aModel);
            
            // TABELA CURSO
            aModel = (DefaultTableModel)tbl_curso.getModel();
            aModel.setRowCount(0);
            stmt=con.createStatement();            
            rs=stmt.executeQuery("select codigo, descricao, ementa from curso");
            rsmd = rs.getMetaData();
            colNo = rsmd.getColumnCount();
            
            while(rs.next())
            {
                Object[] objects = new Object[colNo];
                for(int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i+1);
                }
                aModel.addRow(objects);
            }
            
            tbl_curso.setModel(aModel);
            
            // TABELA MATRICULA
            aModel = (DefaultTableModel)tbl_matricula.getModel();
            aModel.setRowCount(0);
            stmt=con.createStatement();      
            String sql =    "select " +
                            " curso_aluno.codigo, " + 
                            " curso_aluno.codigo_curso, " + 
                            " curso.descricao, " + 
                            " curso_aluno.codigo_aluno, " + 
                            " aluno.nome " + 
                            "from curso_aluno " +
                            "inner join aluno on curso_aluno.codigo_aluno = aluno.codigo " +
                            "inner join curso on curso_aluno.codigo_curso = curso.codigo ";
            rs=stmt.executeQuery(sql);
            rsmd = rs.getMetaData();
            colNo = rsmd.getColumnCount();
            
            while(rs.next())
            {
                Object[] objects = new Object[colNo];
                for(int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i+1);
                }
                aModel.addRow(objects);
            }
            
            tbl_matricula.setModel(aModel);            
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Nao foi possivel acessar o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nome_aluno = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        descricao_curso = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_matricula = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_aluno = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_curso = new javax.swing.JTable();
        btnProcurarAluno = new javax.swing.JButton();
        btnProcurarCurso = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Matriculas");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("MATRICULAS");

        jLabel2.setText("Nome:");

        jLabel3.setText("Curso:");

        jScrollPane1.setViewportView(nome_aluno);

        jScrollPane2.setViewportView(descricao_curso);

        tbl_matricula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Código Curso", "Curso", "Código Aluno", "Nome Aluno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_matricula.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tbl_matricula);

        tbl_aluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome Aluno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tbl_aluno);

        tbl_curso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Ementa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tbl_curso);

        btnProcurarAluno.setText("Procurar");
        btnProcurarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarAlunoActionPerformed(evt);
            }
        });

        btnProcurarCurso.setText("Procurar");
        btnProcurarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarCursoActionPerformed(evt);
            }
        });

        jButton1.setText("Matricular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Para matricular um Aluno em um Curso, selecione-os pelas tabelas abaixo");

        jButton2.setText("Exibir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Excluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("< Voltar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(119, 119, 119)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnProcurarAluno))
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnProcurarCurso))
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                .addComponent(jScrollPane4)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(79, 79, 79)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addContainerGap(19, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton4))
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addComponent(jScrollPane1))
                    .addComponent(btnProcurarAluno)
                    .addComponent(btnProcurarCurso))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcurarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarAlunoActionPerformed
        try
        {       
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            DefaultTableModel aModel = (DefaultTableModel)tbl_aluno.getModel();
            aModel.setRowCount(0);
            Statement stmt=con.createStatement();  
            String sql = "select codigo, nome from aluno where nome like '%" + nome_aluno.getText() + "%'";
            if(nome_aluno.getText().length() == 0){
                sql = "select codigo, nome from aluno";
            }
            ResultSet rs=stmt.executeQuery(sql);
            java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();

            while(rs.next())
            {
                Object[] objects = new Object[colNo];
                for(int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i+1);
                }
                aModel.addRow(objects);
            }

            tbl_aluno.setModel(aModel);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnProcurarAlunoActionPerformed

    private void btnProcurarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarCursoActionPerformed
    try
        {            
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            DefaultTableModel aModel = (DefaultTableModel)tbl_curso.getModel();
            aModel.setRowCount(0);
            Statement stmt=con.createStatement();            
            String sql= "select codigo, descricao, ementa from curso where descricao like '%" + descricao_curso.getText() + "%'";          
            if(descricao_curso.getText().length() == 0){
                sql = "select codigo, descricao, ementa from curso";
            }
            ResultSet rs=stmt.executeQuery(sql);
            java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();

            while(rs.next())
            {
                Object[] objects = new Object[colNo];
                for(int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i+1);
                }
                aModel.addRow(objects);
            }

            tbl_curso.setModel(aModel);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnProcurarCursoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            int SelecionaLinhaAluno = tbl_aluno.getSelectedRow();  
            if(SelecionaLinhaAluno < 0){
                JOptionPane.showMessageDialog(null, "Necessario selecionar um aluno na lista", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            int SelecionaLinhaCurso = tbl_curso.getSelectedRow();  
            if(SelecionaLinhaCurso < 0){
                JOptionPane.showMessageDialog(null, "Necessario selecionar um curso na lista", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            String sql =    "select * " +
                            "from curso_aluno " +
                            "where codigo_aluno=? and codigo_curso=?" ;
            PreparedStatement ps = con.prepareStatement(sql);            
            ps.setInt(1, (int) tbl_aluno.getValueAt(SelecionaLinhaAluno, 0));
            ps.setInt(2, (int) tbl_curso.getValueAt(SelecionaLinhaCurso, 0));
            ResultSet rs = ps.executeQuery();
            if(rs.next()) {
                JOptionPane.showMessageDialog(null, "Aluno ja esta matriculado no curso", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }                        
            
            ps = con.prepareStatement("INSERT INTO curso_aluno (codigo_aluno, codigo_curso) VALUES(?,?)");            
            ps.setInt(1, (int) tbl_aluno.getValueAt(SelecionaLinhaAluno, 0));
            ps.setInt(2, (int) tbl_curso.getValueAt(SelecionaLinhaCurso, 0));
            int resultado = ps.executeUpdate();
            if(resultado > 0){
                JOptionPane.showMessageDialog(null, "Operacao concluida com sucesso", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Operacao falhou", "Aviso", JOptionPane.ERROR_MESSAGE);
            }

        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Operacao falhou (sql)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    try
        {       
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            DefaultTableModel aModel = (DefaultTableModel)tbl_matricula.getModel();
            aModel.setRowCount(0);

            Statement stmt=con.createStatement();
            String sql =    "select " +
                            " curso_aluno.codigo, " + 
                            " curso_aluno.codigo_curso, " + 
                            " curso.descricao, " + 
                            " curso_aluno.codigo_aluno, " + 
                            " aluno.nome " + 
                            "from curso_aluno " +
                            "inner join aluno on curso_aluno.codigo_aluno = aluno.codigo " +
                            "inner join curso on curso_aluno.codigo_curso = curso.codigo ";
            ResultSet rs=stmt.executeQuery(sql);
            java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();

            while(rs.next())
            {
                Object[] objects = new Object[colNo];
                for(int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i+1);
                }
                aModel.addRow(objects);
            }

            tbl_matricula.setModel(aModel);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            int SelecionaLinha = tbl_matricula.getSelectedRow();  
            if(SelecionaLinha < 0){
                JOptionPane.showMessageDialog(null, "Necessario selecionar um item na lista", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            DefaultTableModel model = (DefaultTableModel) tbl_matricula.getModel();        
            PreparedStatement ps = con.prepareStatement("DELETE FROM curso_aluno WHERE codigo=?");            
            ps.setInt(1, (int) tbl_matricula.getValueAt(SelecionaLinha, 0));
            int resultado = ps.executeUpdate();
            if(resultado > 0){
                JOptionPane.showMessageDialog(null, "Operacao concluida com sucesso", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Operacao falhou", "Aviso", JOptionPane.ERROR_MESSAGE);
            }
            model.setRowCount(0);
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Operacao falhou (sql)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new TelaPrincipal().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaMatricula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcurarAluno;
    private javax.swing.JButton btnProcurarCurso;
    private javax.swing.JTextPane descricao_curso;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane nome_aluno;
    private javax.swing.JTable tbl_aluno;
    private javax.swing.JTable tbl_curso;
    private javax.swing.JTable tbl_matricula;
    // End of variables declaration//GEN-END:variables
}
