/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author Eduardo Rocha
 */
public class TelaAluno extends javax.swing.JFrame {

    /**
     * Creates new form TelaAluno
     */
    
    Connection con=null;
    
    public TelaAluno() {
        initComponents();
        setLocationRelativeTo(null);
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/escola", "root", ""); 
            
            // Exibir todos os dados da tabela            
            DefaultTableModel aModel = (DefaultTableModel)tbl_aluno.getModel();
            aModel.setRowCount(0);
            Statement stmt=con.createStatement();            
            ResultSet rs=stmt.executeQuery("select codigo, nome from aluno");
            java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();
            
            while(rs.next())
            {
                Object[] objects = new Object[colNo];
                for(int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i+1);
                }
                aModel.addRow(objects);
            }
            
            tbl_aluno.setModel(aModel);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Nao foi possivel acessar o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_aluno = new javax.swing.JTable();
        btn_exibir = new javax.swing.JButton();
        Voltar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nome_aluno = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar Aluno");
        setResizable(false);

        tbl_aluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_aluno.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbl_aluno);

        btn_exibir.setText("Procurar");
        btn_exibir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exibirActionPerformed(evt);
            }
        });

        Voltar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Voltar.setText("< Voltar");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        jButton1.setText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cadastrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome:");

        jButton3.setText("Editar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(btn_exibir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addComponent(Voltar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nome_aluno, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Voltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nome_aluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(btn_exibir)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_exibirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exibirActionPerformed
        try
        {       
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            DefaultTableModel aModel = (DefaultTableModel)tbl_aluno.getModel();
            aModel.setRowCount(0);
            Statement stmt=con.createStatement();  
            String sql = "select codigo, nome from aluno where nome like '%" + nome_aluno.getText() + "%'";
            if(nome_aluno.getText().length() == 0){
                sql = "select codigo, nome from aluno";
            }
            ResultSet rs=stmt.executeQuery(sql);
            java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();

            while(rs.next())
            {
                Object[] objects = new Object[colNo];
                for(int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i+1);
                }
                aModel.addRow(objects);
            }

            tbl_aluno.setModel(aModel);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_exibirActionPerformed

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        new TelaPrincipal().setVisible(true);
        dispose();
    }//GEN-LAST:event_VoltarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            DefaultTableModel model = (DefaultTableModel) tbl_aluno.getModel();        
            PreparedStatement ps = con.prepareStatement("DELETE FROM aluno WHERE codigo=?");
            int SelecionaLinha = tbl_aluno.getSelectedRow();  
            if(SelecionaLinha < 0){
                JOptionPane.showMessageDialog(null, "Necessario selecionar um item na lista", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            ps.setInt(1, (int) tbl_aluno.getValueAt(SelecionaLinha, 0));
            int resultado = ps.executeUpdate();
            if(resultado > 0){
                JOptionPane.showMessageDialog(null, "Operacao concluida com sucesso", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Operacao falhou", "Aviso", JOptionPane.ERROR_MESSAGE);
            }
            model.setRowCount(0);
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Operacao falhou (sql)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
               
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try 
        {       
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(nome_aluno.getText().length() == 0)
            {                
                JOptionPane.showMessageDialog(null, "Ha campos vazios!", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            PreparedStatement ps = con.prepareStatement("INSERT INTO ALUNO (NOME) VALUES(?)");
            ps.setString(1, nome_aluno.getText());
            int result = ps.executeUpdate();
            if(result > 0){
                JOptionPane.showMessageDialog(null, "Operacao concluida", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Operacao falhou", "Aviso", JOptionPane.ERROR_MESSAGE);
            }            
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Operacao falhou (sql)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }

        nome_aluno.setText("");
        nome_aluno.requestFocus();                                  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if(con.isClosed())
            {
                JOptionPane.showMessageDialog(null, "Nao ha conexao com o banco de dados", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            DefaultTableModel model = (DefaultTableModel) tbl_aluno.getModel(); 
            int SelecionaLinha = tbl_aluno.getSelectedRow(); 
            if(SelecionaLinha < 0){
                JOptionPane.showMessageDialog(null, "Necessario selecionar um item na lista", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            String novoNome = JOptionPane.showInputDialog("Editando nome", tbl_aluno.getValueAt(SelecionaLinha, 1));
            // Se retornar null significa que janela foi fechada
            if(novoNome==null){
                return;
            }
            else if(novoNome.isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Campo em branco!", "Aviso", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            PreparedStatement ps = con.prepareStatement("UPDATE aluno SET NOME=? WHERE codigo=?");

            ps.setString(1, novoNome);
            ps.setInt(2, (int) tbl_aluno.getValueAt(SelecionaLinha, 0));
            int resultado = ps.executeUpdate();
            if(resultado > 0){
                JOptionPane.showMessageDialog(null, "Operacao concluida com sucesso", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Operacao falhou", "Aviso", JOptionPane.ERROR_MESSAGE);
            }
            
            model.setRowCount(0);
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Operacao falhou (sql)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Operacao falhou (exception)", "Aviso", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Voltar;
    private javax.swing.JButton btn_exibir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nome_aluno;
    private javax.swing.JTable tbl_aluno;
    // End of variables declaration//GEN-END:variables
}
